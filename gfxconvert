#!/bin/env python

import os, sys, getpass

from lhpcdt import *

# --- Version information

gfxconvert_version = "0.5"

# --- Fix search path for tool

tool_path = os.path.dirname(os.path.abspath(sys.argv[0]))
sys.path.append(tool_path)

# --- Functions


def create_direct_script(server_fname, direct_fname, descr):
    """Create script for direct vglconnect"""

    cfg = config.GfxConfig.create()

    client_script_filename = os.path.join(cfg.client_script_dir, direct_fname)
    server_script_filename = os.path.join(cfg.script_dir, server_fname)
    
    username = getpass.getuser()

    client_file = open(client_script_filename, "w")

    # vglconnect_template = '%s/vglconnect %s@%s %s/%s'

    client_file.write(cfg.vgl_connect_template % (cfg.vgl_bin, cfg.backend_node, cfg.script_dir, server_fname))
    client_file.close()

    os.chmod(client_script_filename, 0755)


def create_slurm_script(server_fname, slurm_fname, descr):
    """Create script for running through SLURM"""

    cfg = config.GfxConfig.create()

    client_script_filename = os.path.join(cfg.client_script_dir, slurm_fname)
    server_script_filename = os.path.join(cfg.script_dir, server_fname)

    client_file = open(client_script_filename, "w")
    client_file.write(cfg.simple_slurm_template % (descr, cfg.default_part, cfg.default_account, server_script_filename))
    client_file.close()

    os.chmod(client_script_filename, 0755)


def create_desktop_entry(script, descr):
    """Create desktop entry for script"""

    print("Creating desktop entry '%s'" % script)
    desktop_filename = os.path.join(cfg.applications_dir, "%s.desktop" % descr)
    script_filename = os.path.join(cfg.client_script_dir, script)

    entry = desktop.DesktopEntry()
    entry.filename = desktop_filename
    entry.terminal = False
    entry.icon = ""
    entry.name = descr
    entry.exec_file = "%s" % script_filename
    entry.write()

    return entry


def parse_script_dir():
    """Parse script directory for run-scripts"""

    cfg = config.GfxConfig.create()
    script_dir = cfg.script_dir

    menu = desktop.Menu()

    for script in os.listdir(script_dir):
        if script.endswith('.sh') and script.startswith('run_') and script.find('rviz-server')!=-1:
            filename = os.path.join(script_dir, script)
            app_name = filename.split("_")[1]

            server_filename = os.path.basename(filename)

            direct_client_filename = 'run_%s_rviz-direct.sh' % app_name
            direct_client_descr = app_name.title() + ' (Direct)'
            slurm_client_filename = 'run_%s_rviz-slurm.sh' % app_name
            slurm_client_descr = app_name.title()

            create_slurm_script(server_filename, slurm_client_filename, slurm_client_descr)
            slurm_entry = create_desktop_entry(slurm_client_filename, slurm_client_descr)

            if cfg.direct_scripts:
                create_direct_script(server_filename, direct_client_filename, direct_client_descr)
                direct_entry = create_desktop_entry(direct_client_filename, direct_client_descr)

            if cfg.direct_scripts:
                menu.items.append(os.path.basename(direct_entry.filename))

            menu.items.append(os.path.basename(slurm_entry.filename))

    menu.dest_filename = os.path.join(cfg.menu_dir, cfg.menu_filename)
    menu.write()


if __name__ == '__main__':

    # Show version information

    print("LUNARC HPC Desktop - Wrapper script  - Version %s" % gfxconvert_version)
    print("Written by Jonas Lindemann (jonas.lindemann@lunarc.lu.se)")
    print("Copyright (C) 2017 LUNARC, Lund University")

    cfg = config.GfxConfig.create()
    cfg.print_config()

    if cfg.is_ok:
        parse_script_dir()
