#!/bin/bash

# Command line launcher for running command line OpenGL applications.

GFX_GROUP="cpuamd"

# Make sure we use the system Python is used.

OLD_PATH=$PATH
PATH=/bin:$PATH

OLD_PYTHONPATH=$PYTHONPATH
PYTHONPATH=/usr/lib64/python3.9/site-packages

OLD_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
LD_LIBRARY_PATH=/usr/lib64/python3.9/site-packages/PyQt5

CURR_DIR=$(pwd)

# Define the options

#TEMP=$(getopt -o s,n --long silent,tasks-per-node,dbus: -n 'intrun' -- "$@")

# Exit if the options have not been successfully parsed

#if [ $? != 0 ]; then echo "Terminating..." >&2; exit 1; fi

# Note the quotes around `$TEMP`: they are essential!

#eval set -- "$TEMP"

# Parse options meant for the script itself

silent=''
tasks_per_node=1
dbus=''

while [[ "$#" -gt 0 ]]; do
    case $1 in
        --silent) silent='--silent'; shift ;;
        --dbus) dbus='--dbus'; shift ;;
        --tasks-per-node) tasks_per_node="$2"; shift 2 ;;
        --) shift; break ;; # Explicitly split script options from command
        *) echo "Unknown option: $1"; exit 1 ;;
    esac
done

# Default values for options

# Extract options and their arguments into variables


if [ -z $1 ]; then
  echo "Error: No arguments provided."
  echo "Usage: $0 <path_to_script> [additional arguments...]"
  exit 1
fi

# Resolve the full canonical path of the first argument

FULL_PATH_BIN=$(readlink --canonicalize "$1")
FULL_PATH=$(dirname "${FULL_PATH_BIN}")
EXE_NAME=$(basename "${FULL_PATH_BIN}")

shift

if [ ! -z $dbus ]; then
  DBUS_LAUNCH_CMD="dbus-launch --exit-with-session"
  DBUS_CLEANUP_CMD="killall dbus-launch" 
fi

# Launch the graphics application with the provided arguments

if [ -f "$FULL_PATH" ]; then
  CMD="export PATH=$OLD_PATH;export LD_LIBRARY_PATH=$OLD_LD_LIBRARY_PATH;export PYTHONPATH=$OLD_PYTHONPATH;cd ${FULL_PATH};${DBUS_LAUNCH_CMD} ./${EXE_NAME} $@;${DBUS_CLEANUP_CMD}"
  TMP_SCRIPT=$(mktemp -p ${FULL_PATH})
  echo ${CMD} >> ${TMP_SCRIPT}
  chmod +x ${TMP_SCRIPT}
  gfxlaunch --group $GFX_GROUP --title "Interactive Local Run" $silent --tasks-per-node=$tasks_per_node --feature-disable --cmd ${TMP_SCRIPT}
  rm ${TMP_SCRIPT}
else
  CMD="export PATH=$OLD_PATH;export LD_LIBRARY_PATH=$OLD_LD_LIBRARY_PATH;export PYTHONPATH=$OLD_PYTHONPATH;cd $CURR_DIR;${DBUS_LAUNCH_CMD} ${EXE_NAME} $@;${DBUS_CLEANUP_CMD}"
  TMP_SCRIPT=$(mktemp -p ${FULL_PATH})
  echo ${CMD} >> ${TMP_SCRIPT}
  chmod +x ${TMP_SCRIPT}
  gfxlaunch --group $GFX_GROUP --title "Interactive Run" $silent --tasks-per-node=$tasks_per_node --feature-disable --cmd ${TMP_SCRIPT}
  rm ${TMP_SCRIPT}
fi